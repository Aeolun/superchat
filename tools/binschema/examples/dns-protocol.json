{
  "protocol": {
    "name": "DNS Protocol",
    "version": "RFC 1035",
    "types_schema": "./dns-types.json",
    "description": "Domain Name System (DNS) protocol for resolving domain names to IP addresses and other resource records. DNS uses a distributed database organized in a hierarchical tree structure of domains.",

    "header_format": "DNSHeader",

    "header_example": {
      "decoded": {
        "id": 4660,
        "qr": 0,
        "opcode": 0,
        "aa": 0,
        "tc": 0,
        "rd": 1,
        "ra": 0,
        "z": 0,
        "rcode": 0,
        "qdcount": 1,
        "ancount": 0,
        "nscount": 0,
        "arcount": 0
      }
    },

    "field_descriptions": {
      "DNSHeader.id": "A 16-bit identifier assigned by the program that generates any kind of query. This identifier is copied into the corresponding reply and can be used by the requester to match up replies to outstanding queries.",
      "DNSHeader.qr": "Query/Response flag - 1 bit that specifies whether this message is a query (0) or a response (1)",
      "DNSHeader.opcode": "Operation code - 4 bits specifying the kind of query. Set by originator, copied into response. 0=standard query (QUERY), 1=inverse query (IQUERY), 2=server status request (STATUS), 3-15=reserved for future use",
      "DNSHeader.aa": "Authoritative Answer - 1 bit valid in responses. Specifies that the responding name server is an authority for the domain name in the question section. Note: AA corresponds to the name matching the query name, or the first owner name in the answer section",
      "DNSHeader.tc": "TrunCation - 1 bit specifying that this message was truncated due to length greater than that permitted on the transmission channel (512 bytes for UDP)",
      "DNSHeader.rd": "Recursion Desired - 1 bit that may be set in a query and is copied into the response. If set, it directs the name server to pursue the query recursively. Recursive query support is optional",
      "DNSHeader.ra": "Recursion Available - 1 bit set or cleared in a response. Denotes whether recursive query support is available in the name server",
      "DNSHeader.z": "Reserved for future use - 3 bits. Must be zero in all queries and responses",
      "DNSHeader.rcode": "Response code - 4 bits set as part of responses. 0=No error, 1=Format error (unable to interpret query), 2=Server failure, 3=Name Error (domain does not exist, only from authoritative server), 4=Not Implemented (query type not supported), 5=Refused (policy reasons), 6-15=reserved",
      "DNSHeader.qdcount": "An unsigned 16-bit integer specifying the number of entries in the question section",
      "DNSHeader.ancount": "An unsigned 16-bit integer specifying the number of resource records in the answer section",
      "DNSHeader.nscount": "An unsigned 16-bit integer specifying the number of name server resource records in the authority records section",
      "DNSHeader.arcount": "An unsigned 16-bit integer specifying the number of resource records in the additional records section",

      "Question.qname": "A domain name represented as a sequence of labels. Each label consists of a length octet followed by that number of octets. The domain name terminates with the zero length octet for the null label of the root. May be an odd number of octets; no padding is used",
      "Question.qtype": "A two-octet code which specifies the type of the query. Values include all TYPE codes plus some more general codes which can match more than one type: 1=A, 2=NS, 5=CNAME, 6=SOA, 12=PTR, 15=MX, 16=TXT, 28=AAAA, 252=AXFR (zone transfer), 255=* (all records)",
      "Question.qclass": "A two-octet code that specifies the class of the query. 1=IN (Internet), 2=CS (CSNET, obsolete), 3=CH (CHAOS), 4=HS (Hesiod), 255=* (any class)",

      "ResourceRecord.name": "An owner name - the domain name to which this resource record pertains. Can be a domain name or a compression pointer (2 bytes starting with bits 11)",
      "ResourceRecord.rtype": "Two octets containing one of the RR TYPE codes. Specifies the meaning of the data in the RDATA field. Common types: 1=A (host address), 2=NS (authoritative name server), 5=CNAME (canonical name), 6=SOA (start of authority), 12=PTR (domain name pointer), 15=MX (mail exchange), 16=TXT (text strings), 28=AAAA (IPv6 address)",
      "ResourceRecord.rclass": "Two octets which specify the class of the data in the RDATA field. 1=IN (Internet), 3=CH (CHAOS), 4=HS (Hesiod)",
      "ResourceRecord.ttl": "A 32-bit unsigned integer that specifies the time interval (in seconds) that the resource record may be cached before it should be discarded. Zero values mean the RR can only be used for the transaction in progress and should not be cached",
      "ResourceRecord.rdlength": "An unsigned 16-bit integer that specifies the length in octets of the RDATA field",

      "A_Record.address": "A 32-bit Internet address (IPv4). Hosts with multiple Internet addresses will have multiple A records",
      "NS_Record.nsdname": "A domain name which specifies a host which should be authoritative for the specified class and domain",
      "CNAME_Record.cname": "A domain name which specifies the canonical or primary name for the owner. The owner name is an alias",
      "SOA_Record.mname": "The domain name of the name server that was the original or primary source of data for this zone",
      "SOA_Record.rname": "A domain name which specifies the mailbox of the person responsible for this zone",
      "SOA_Record.serial": "The unsigned 32-bit version number of the original copy of the zone. Zone transfers preserve this value. Wraps and should be compared using sequence space arithmetic",
      "SOA_Record.refresh": "A 32-bit time interval (in seconds) before the zone should be refreshed",
      "SOA_Record.retry": "A 32-bit time interval (in seconds) that should elapse before a failed refresh should be retried",
      "SOA_Record.expire": "A 32-bit time value (in seconds) that specifies the upper limit on the time interval that can elapse before the zone is no longer authoritative",
      "SOA_Record.minimum": "The unsigned 32-bit minimum TTL field that should be exported with any RR from this zone",
      "PTR_Record.ptrdname": "A domain name which points to some location in the domain name space. Used in special domains (like IN-ADDR.ARPA) to point to some other location",
      "MX_Record.preference": "A 16-bit integer which specifies the preference given to this RR among others at the same owner. Lower values are preferred",
      "MX_Record.exchange": "A domain name which specifies a host willing to act as a mail exchange for the owner name",
      "AAAA_Record.address_high": "Upper 64 bits of the 128-bit IPv6 address",
      "AAAA_Record.address_low": "Lower 64 bits of the 128-bit IPv6 address"
    },

    "notes": [
      "**Byte order:** All multi-byte integers use big-endian (network byte order) as specified in RFC 1035 section 2.3.2.",
      "**Domain name encoding:** Labels are prefixed with their length (max 63 bytes per label). Total domain name is max 255 octets. Domain names end with a zero-length label (0x00).",
      "**Message compression:** DNS uses compression to eliminate repetition of domain names. A pointer is 2 octets starting with bits 11, followed by a 14-bit offset from the start of the message (section 4.1.4).",
      "**Transport:** DNS uses UDP port 53 for standard queries and TCP port 53 for zone transfers. UDP messages are limited to 512 bytes (EDNS0 can increase this).",
      "**Case insensitivity:** All DNS comparisons between character strings (labels, domain names) are case-insensitive. However, original case should be preserved when possible.",
      "**Size limits:** Labels are 63 octets or less. Complete domain names are 255 octets or less. TTL is a positive value of a signed 32-bit number. UDP messages are 512 octets or less without EDNS0.",
      "**Message format:** All DNS messages have the same 5-section format: Header (always present), Question (query parameters), Answer (RRs answering the question), Authority (RRs pointing toward an authority), Additional (RRs holding additional information).",
      "**Bitfield packing:** The flags in bytes 2-3 of the header are packed as: QR(1) | Opcode(4) | AA(1) | TC(1) | RD(1) | RA(1) | Z(3) | RCODE(4)"
    ],

    "messages": [
      {
        "code": "Query",
        "name": "DNS_QUERY",
        "direction": "client_to_server",
        "payload_type": "Question",
        "description": "DNS query message sent from a resolver to a name server requesting resolution of a domain name",
        "notes": [
          "**QR bit = 0** in all queries.",
          "**ID field** should be randomly generated to match with responses and prevent spoofing.",
          "**RD bit = 1** requests recursive resolution (server will recursively query other servers if needed).",
          "**QDCOUNT** is typically 1 (one question). **ANCOUNT, NSCOUNT, ARCOUNT** are typically 0 in queries.",
          "**Example:** Query for the IPv4 address (A record) of example.com with class IN"
        ],
        "example": {
          "description": "Standard query for A record of example.com",
          "bytes": [7, 101, 120, 97, 109, 112, 108, 101, 3, 99, 111, 109, 0, 0, 1, 0, 1],
          "decoded": {
            "qname": ["example", "com"],
            "qtype": 1,
            "qclass": 1
          }
        }
      },
      {
        "code": "Response",
        "name": "DNS_RESPONSE",
        "direction": "server_to_client",
        "payload_type": "ResourceRecord",
        "description": "DNS response message sent from a name server to a resolver containing requested resource records or an error code",
        "notes": [
          "**QR bit = 1** in all responses.",
          "**ID field** is copied from the query to allow matching.",
          "**Question section** is copied from the query.",
          "**Answer section** contains RRs that directly answer the question.",
          "**Authority section** contains NS RRs pointing toward authoritative name servers.",
          "**Additional section** contains RRs that relate to the query but are not strictly answers (e.g., A records for name servers listed in Authority section).",
          "**Message compression** is commonly used in responses. Pointer 0xC00C (bits: 11000000 00001100) refers to offset 12, which is typically the start of the question section's QNAME.",
          "**RCODE field** indicates success (0) or the type of error that occurred.",
          "**AA bit = 1** if the server is authoritative for the domain (not a cached answer).",
          "**TC bit = 1** if the response was truncated due to exceeding 512 bytes over UDP. Client should retry over TCP."
        ],
        "example": {
          "description": "Response with A record for google.com → 142.250.185.46 (uncompressed)",
          "bytes": [6, 103, 111, 111, 103, 108, 101, 3, 99, 111, 109, 0, 0, 1, 0, 1, 0, 1, 81, 128, 0, 4, 142, 250, 185, 46],
          "decoded": {
            "name": ["google", "com"],
            "rtype": 1,
            "rclass": 1,
            "ttl": 86400,
            "rdlength": 4,
            "rdata": [142, 250, 185, 46]
          }
        }
      }
    ]
  }
}
